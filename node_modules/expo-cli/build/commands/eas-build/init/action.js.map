{"version":3,"sources":["../../../../src/commands/eas-build/init/action.ts"],"names":["initAction","projectDir","options","nonInteractive","parent","spinner","easJsonPath","path","join","easJson","builds","android","release","workflow","ios","fs","pathExists","writeFile","JSON","stringify","intentToAdd","succeed","err","DirtyGitTreeError","log","newLine","chalk","green","figures","tick","e","Error","fail","commandCtx","requestedPlatform","BuildCommandPlatform","ALL","profile","trackingCtx","skipCredentialsCheck","skipProjectConfiguration","easConfig","EasJsonReader","readAsync","androidCtx","platform","Platform","Android","androidBuilder","AndroidBuilder","ensureCredentialsAsync","configureProjectAsync","iosCtx","iOS","iosBuilder","iOSBuilder"],"mappings":"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","sourcesContent":["import { Platform } from '@expo/eas-build-job';\nimport chalk from 'chalk';\nimport figures from 'figures';\nimport fs from 'fs-extra';\nimport ora from 'ora';\nimport path from 'path';\n\nimport { EasJsonReader } from '../../../easJson';\nimport { gitAddAsync } from '../../../git';\nimport log from '../../../log';\nimport AndroidBuilder from '../build/builders/AndroidBuilder';\nimport iOSBuilder from '../build/builders/iOSBuilder';\nimport { BuildCommandPlatform } from '../types';\nimport createBuilderContext from '../utils/createBuilderContext';\nimport createCommandContextAsync from '../utils/createCommandContextAsync';\nimport {\n  DirtyGitTreeError,\n  ensureGitRepoExistsAsync,\n  ensureGitStatusIsCleanAsync,\n  reviewAndCommitChangesAsync,\n} from '../utils/git';\n\ninterface BuildOptions {\n  skipCredentialsCheck?: boolean; // noop for now\n  parent?: {\n    nonInteractive: boolean;\n  };\n}\n\nasync function initAction(projectDir: string, options: BuildOptions): Promise<void> {\n  const nonInteractive = options.parent?.nonInteractive === true;\n\n  const spinner = ora('Checking for eas.json file');\n\n  await ensureGitRepoExistsAsync();\n  await ensureGitStatusIsCleanAsync();\n\n  const easJsonPath = path.join(projectDir, 'eas.json');\n  const easJson = {\n    builds: {\n      android: {\n        release: {\n          workflow: 'generic',\n        },\n      },\n      ios: {\n        release: {\n          workflow: 'generic',\n        },\n      },\n    },\n  };\n\n  if (!(await fs.pathExists(easJsonPath))) {\n    await fs.writeFile(easJsonPath, `${JSON.stringify(easJson, null, 2)}\\n`);\n    await gitAddAsync(easJsonPath, { intentToAdd: true });\n  }\n\n  try {\n    await ensureGitStatusIsCleanAsync();\n    spinner.succeed('Found existing eas.json file');\n  } catch (err) {\n    if (err instanceof DirtyGitTreeError) {\n      spinner.succeed('We created a minimal eas.json file');\n      log.newLine();\n\n      try {\n        await reviewAndCommitChangesAsync('Create minimal eas.json', { nonInteractive });\n\n        log(`${chalk.green(figures.tick)} Successfully committed eas.json.`);\n      } catch (e) {\n        throw new Error(\n          \"Aborting, run the command again once you're ready. Make sure to commit any changes you've made.\"\n        );\n      }\n    } else {\n      spinner.fail();\n      throw err;\n    }\n  }\n\n  const commandCtx = await createCommandContextAsync({\n    requestedPlatform: BuildCommandPlatform.ALL,\n    profile: 'release',\n    projectDir,\n    trackingCtx: {},\n    nonInteractive,\n    skipCredentialsCheck: options?.skipCredentialsCheck,\n    skipProjectConfiguration: false,\n  });\n\n  const easConfig = await new EasJsonReader(\n    commandCtx.projectDir,\n    commandCtx.requestedPlatform\n  ).readAsync(commandCtx.profile);\n\n  const androidCtx = createBuilderContext<Platform.Android>({\n    commandCtx,\n    platform: Platform.Android,\n    easConfig,\n  });\n\n  const androidBuilder = new AndroidBuilder(androidCtx);\n\n  await androidBuilder.ensureCredentialsAsync();\n  await androidBuilder.configureProjectAsync();\n\n  const iosCtx = createBuilderContext<Platform.iOS>({\n    commandCtx,\n    platform: Platform.iOS,\n    easConfig,\n  });\n\n  const iosBuilder = new iOSBuilder(iosCtx);\n\n  await iosBuilder.ensureCredentialsAsync();\n  await iosBuilder.configureProjectAsync();\n}\n\nexport default initAction;\n"],"file":"action.js"}