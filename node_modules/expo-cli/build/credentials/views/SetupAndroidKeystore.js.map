{"version":3,"sources":["../../../src/credentials/views/SetupAndroidKeystore.ts"],"names":["SetupAndroidKeystore","constructor","experienceName","options","open","ctx","keystore","keystorePassword","keyAlias","keyPassword","android","fetchKeystore","nonInteractive","allowMissingKeystore","log","warn","Error","UpdateKeystore","bestEffortKeystoreGeneration","SetupAndroidBuildCredentialsFromLocal","localCredentials","credentialsJsonReader","readAndroidCredentialsAsync","projectDir","error","updateKeystore"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;AAOO,MAAMA,oBAAN,CAA4C;AACjDC,EAAAA,WAAW,CAASC,cAAT,EAAyCC,OAAzC,EAA2D;AAAA,SAAlDD,cAAkD,GAAlDA,cAAkD;AAAA,SAAlBC,OAAkB,GAAlBA,OAAkB;AAAE;;AAExE,QAAMC,IAAN,CAAWC,GAAX,EAAgD;AAAA;;AAC9C,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,gBAAZ;AAA8BC,MAAAA,QAA9B;AAAwCC,MAAAA;AAAxC,iCACH,MAAMJ,GAAG,CAACK,OAAJ,CAAYC,aAAZ,CAA0B,KAAKT,cAA/B,CADH,yEACsD,EAD5D;;AAEA,QAAII,QAAQ,IAAIC,gBAAZ,IAAgCC,QAAhC,IAA4CC,WAAhD,EAA6D;AAC3D,aAAO,IAAP;AACD;;AACD,QAAI,KAAKN,OAAL,CAAaS,cAAjB,EAAiC;AAC/B,UAAI,KAAKT,OAAL,CAAaU,oBAAjB,EAAuC;AACrCC,uBAAIC,IAAJ,CACE,6FADF;;AAGA,eAAO,IAAP;AACD,OALD,MAKO;AACL,cAAM,IAAIC,KAAJ,CAAU,sEAAV,CAAN;AACD;AACF;;AAED,WAAO,KAAIC,iCAAJ,EAAmB,KAAKf,cAAxB,EAAwC;AAAEgB,MAAAA,4BAA4B,EAAE;AAAhC,KAAxC,CAAP;AACD;;AArBgD;;;;AAwB5C,MAAMC,qCAAN,CAA6D;AAClElB,EAAAA,WAAW,CAASC,cAAT,EAAiC;AAAA,SAAxBA,cAAwB,GAAxBA,cAAwB;AAAE;;AAE9C,QAAME,IAAN,CAAWC,GAAX,EAAgD;AAC9C,QAAIe,gBAAJ;;AACA,QAAI;AACFA,MAAAA,gBAAgB,GAAG,MAAMC,qBAAqB,GAACC,2BAAtB,CAAkDjB,GAAG,CAACkB,UAAtD,CAAzB;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACdV,qBAAIU,KAAJ,CACE,yHADF;;AAGA,YAAMA,KAAN;AACD;;AACD,UAAMnB,GAAG,CAACK,OAAJ,CAAYe,cAAZ,CAA2B,KAAKvB,cAAhC,EAAgDkB,gBAAgB,CAACd,QAAjE,CAAN;AACA,WAAO,IAAP;AACD;;AAfiE","sourcesContent":["import log from '../../log';\nimport { Context, IView } from '../context';\nimport * as credentialsJsonReader from '../credentialsJson/read';\nimport { UpdateKeystore } from './AndroidKeystore';\n\ninterface Options {\n  nonInteractive?: boolean;\n  allowMissingKeystore?: boolean;\n}\n\nexport class SetupAndroidKeystore implements IView {\n  constructor(private experienceName: string, private options: Options) {}\n\n  async open(ctx: Context): Promise<IView | null> {\n    const { keystore, keystorePassword, keyAlias, keyPassword } =\n      (await ctx.android.fetchKeystore(this.experienceName)) ?? {};\n    if (keystore && keystorePassword && keyAlias && keyPassword) {\n      return null;\n    }\n    if (this.options.nonInteractive) {\n      if (this.options.allowMissingKeystore) {\n        log.warn(\n          'There is no valid Keystore defined for this app, new one will be generated on Expo servers.'\n        );\n        return null;\n      } else {\n        throw new Error('Generating a new Keystore is not supported in --non-interactive mode');\n      }\n    }\n\n    return new UpdateKeystore(this.experienceName, { bestEffortKeystoreGeneration: true });\n  }\n}\n\nexport class SetupAndroidBuildCredentialsFromLocal implements IView {\n  constructor(private experienceName: string) {}\n\n  async open(ctx: Context): Promise<IView | null> {\n    let localCredentials;\n    try {\n      localCredentials = await credentialsJsonReader.readAndroidCredentialsAsync(ctx.projectDir);\n    } catch (error) {\n      log.error(\n        'Reading credentials from credentials.json failed. Make sure this file is correct and all credentials are present there.'\n      );\n      throw error;\n    }\n    await ctx.android.updateKeystore(this.experienceName, localCredentials.keystore);\n    return null;\n  }\n}\n"],"file":"SetupAndroidKeystore.js"}